{"version":3,"file":"static/js/305.c2dd9570.chunk.js","mappings":"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","sources":["components/member/MemberMain.jsx","../node_modules/date-fns/esm/compareAsc/index.js"],"sourcesContent":["// 這個是管理 主右側的內容 左側是外資料夾的 Layout\n// 目前這裡的 content 又分為 上下層分開的路徑 版面寫法  這個裡面 main like mange 只管理 右側下半內容而已 其他不會控制到\nimport React, { useState, useEffect } from \"react\";\n\n\nimport { DivContentZone } from '../memberBasic/MemberBasicStyle'\n\nimport MemberBasic from '../memberBasic/MemberBasic'\nimport axios from 'axios';\nimport { parse, compareAsc } from 'date-fns';\n\n\n\nfunction MemberMain() {\n\n    let userIdOrder = localStorage.getItem('id');\n    console.log(userIdOrder)\n\n\n\n\n\n\n\n    // 用於取消訂單 可以馬上刷新\n    const [cancelOrder, setCancelOrder] = useState(false);\n\n    // 延遲獲取星星的\n    const [delayGetStar, setDelayGetStar] = useState(false);\n\n    const [campDataResult, setCampDataResult] = useState([]);\n\n    // 額外控制 訂單抓取星星 如下若我取消訂單cancelOrder刷新抓值 會導致星星疊不到正確id上抓不到資料 需要馬上合併一次資料 否則會跳為抓不到資料\n    // 所以用這個控制 再次抓取合併的功能 放在合併陣列內物件的監測處\n    const [otherCon, setOtherCon] = useState(false);\n\n\n\n    \n    function useDataIng() {\n\n        // const [Data, setData] = useState(null);\n        useEffect(() => {\n            axios.get(`http://localhost:3000/orders?userId=${userIdOrder}&orderExpired=false&orderCancel=false&_expand=camp&_expand=campinfo`)\n                .then(response => {\n\n                    const result = response.data;\n                    console.log(result)\n\n                    // date - fns引入 解析原本的 年月日 格式   转换为JavaScript日期对象，然后再进行排序\n                    const sortedResult = result.sort((a, b) => {\n                        const dateA = parse(a.roomStart, 'yyyy年MM月dd日', new Date());\n                        const dateB = parse(b.roomStart, 'yyyy年MM月dd日', new Date());\n                        return compareAsc(dateA, dateB);\n                    });\n\n                    setCampDataResult(sortedResult);\n\n                    setOtherCon(!otherCon)\n\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        }, [cancelOrder]);\n        // return Data;\n    }\n\n    const dataIng = useDataIng();\n\n\n\n\n\n\n\n    useEffect(() => {\n\n        const fetchFeedbackData = async (campId) => {\n            try {\n                const response = await axios.get(`http://localhost:3000/feedbacks?campId=${campId}`);\n                return response.data;\n            } catch (error) {\n                console.error(`Error fetching feedback data for campId ${campId}:`, error);\n                return [];\n            }\n        };\n\n        const getFeedbackDataForCamp = async () => {\n            if (campDataResult && campDataResult.length > 0) {\n                const feedbackDataPromises = campDataResult.map((campItem) =>\n                    fetchFeedbackData(campItem.campId)\n                );\n                const feedbackDataArray = await Promise.all(feedbackDataPromises);\n\n                const campDataWithFeedback = campDataResult.map((campItem, index) => {\n                    const feedbackDataForCamp = feedbackDataArray[index] || [];\n\n                    const scores = feedbackDataForCamp.map((feedbackItem) => feedbackItem.totalScore);\n\n                    const totalScore = scores.reduce((acc, curr) => acc + curr, 0);\n                    const totalAverageScore = scores.length > 0 ? (totalScore / (scores.length * 5)).toFixed(1) : 0;\n                    // toFixed(1); //只顯示到小數點後一位\n                    const scoreNum = scores.length\n                    // const averageScore = totalScore / scores.length;\n\n\n                    return {\n                        ...campItem,\n                        totalScore,\n                        totalAverageScore,\n                        scoreNum,\n                    };\n                });\n\n                console.log(campDataWithFeedback)\n                setCampDataResult(campDataWithFeedback);\n                // 或者根據您的需求，將結果存儲在其他狀態中\n            }\n        };\n\n        getFeedbackDataForCamp();\n    }, [delayGetStar, otherCon]);\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // function useData() {\n    //     // 包函式抓不到是因為並沒有開關讓他重啟抓取\n\n    //     useEffect(() => {\n    //         const fetchCampData = async () => {\n    //             try {\n    //                 const response = await axios.get(`http://localhost:3000/orders?userId=${userIdOrder}&orderExpired=false&orderCancel=false&_expand=camp&_expand=campinfo`)\n\n    //                 const result = response.data;\n    //                 console.log(result)\n\n    //                 const sortedResult = result.sort((a, b) => {\n    //                     const today = Date.now();\n    //                     const diffA = Math.abs(today - a.jsDate);\n    //                     const diffB = Math.abs(today - b.jsDate);\n    //                     return diffA - diffB;\n    //                 });\n\n\n\n    //                 setCampDataResult(sortedResult);\n\n    //             } catch (error) {\n    //                 console.error('Error fetching camp data:', error);\n    //             }\n    //         };\n\n\n\n    //         // 取得回饋資料\n    //         const fetchFeedbackData = async (campId) => {\n    //             try {\n    //                 const response = await axios.get(`http://localhost:3000/feedbacks?campId=${campId}`);\n\n    //                 return response.data;\n    //             } catch (error) {\n    //                 console.error(`Error fetching feedback data for campId ${campId}:`, error);\n    //                 return [];\n    //             }\n    //         };\n\n    //         const getFeedbackDataForCamp = async () => {\n    //             if (campDataResult && campDataResult.length > 0) {\n    //                 const feedbackDataPromises = campDataResult.map((campItem) =>\n    //                     // 這裡的跟搜尋頁的營區id抓取不一樣 這是訂單的所以依照訂單的 async fetch的物件格式來取得campId資料\n    //                     fetchFeedbackData(campItem.campId)\n    //                 );\n    //                 const feedbackDataArray = await Promise.all(feedbackDataPromises);\n\n    //                 const campDataWithFeedback = campDataResult.map((campItem, index) => {\n    //                     const feedbackDataForCamp = feedbackDataArray[index] || [];\n\n    //                     const scores = feedbackDataForCamp.map((feedbackItem) => feedbackItem.totalScore);\n\n    //                     const totalScore = scores.reduce((acc, curr) => acc + curr, 0);\n    //                     const totalAverageScore = scores.length > 0 ? (totalScore / (scores.length * 5)).toFixed(1) : 0;\n    //                     // toFixed(1); //只顯示到小數點後一位\n    //                     const scoreNum = scores.length\n    //                     // const averageScore = totalScore / scores.length;\n\n\n    //                     return {\n    //                         ...campItem,\n    //                         totalScore,\n    //                         totalAverageScore,\n    //                         scoreNum,\n    //                     };\n    //                 });\n\n    //                 console.log(campDataWithFeedback)\n    //                 setCampDataResult(campDataWithFeedback);\n    //                 // 或者根據您的需求，將結果存儲在其他狀態中\n    //             }\n    //         };\n    //         fetchCampData()\n    //         getFeedbackDataForCamp();\n\n\n    //     }, [delayGetStar]);\n\n    // }\n    // useData()\n\n\n\n\n\n    return (\n        <>\n            <DivContentZone className=\"py-5\">\n\n                <div className='h-[100px]'>\n                    <h2 className=\"text-xl font-bold\">歡迎，您尚有 <span className=\"text-blue-500\">{campDataResult && campDataResult.length}</span> 筆 行程待進行或進行中</h2>\n                    <strong>準備好開始您的行程了嗎</strong>\n                </div>\n\n\n\n\n\n                {/* 我把沒有行程記錄 的相關顯示 也寫在統一模版 這樣可以寫一次就好 */}\n                {/* {!dataIng || dataIng.length === 0 ?\n                    <div className='py-10'>\n                        <MemberEmptyStyle  />\n                        <h3 className=\"mt-3 font-bold text-xl text-my_green\" style={{ letterSpacing: 1 }}>當前並無行程\n                        </h3>  \n                    </div>\n                    : null} */}\n\n\n\n\n\n                <MemberBasic getdata={campDataResult} status=\"ing\" delayGetStar={delayGetStar} setDelayGetStar={setDelayGetStar} cancelOrder={cancelOrder} setCancelOrder={setCancelOrder} />\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            </DivContentZone>\n        </>\n    );\n}\n\n\n\n\n\n\n\nexport default MemberMain;\n// 匯出這個函式功能\n\n\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}"],"names":["userIdOrder","localStorage","getItem","console","log","_useState","useState","_useState2","_slicedToArray","cancelOrder","setCancelOrder","_useState3","_useState4","delayGetStar","setDelayGetStar","_useState5","_useState6","campDataResult","setCampDataResult","_useState7","_useState8","otherCon","setOtherCon","useEffect","axios","concat","then","response","result","data","sortedResult","sort","a","b","dirtyDateLeft","dirtyDateRight","requiredArgs","arguments","dateLeft","toDate","dateRight","diff","getTime","compareAsc","parse","roomStart","Date","catch","error","fetchFeedbackData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","campId","wrap","_context","prev","next","sent","abrupt","t0","stop","_x","apply","getFeedbackDataForCamp","_ref2","_callee2","feedbackDataPromises","feedbackDataArray","campDataWithFeedback","_context2","length","map","campItem","Promise","all","index","scores","feedbackItem","totalScore","reduce","acc","curr","totalAverageScore","toFixed","scoreNum","_objectSpread","_jsx","_Fragment","children","_jsxs","DivContentZone","className","MemberBasic","getdata","status"],"sourceRoot":""}