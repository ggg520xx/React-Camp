{"version":3,"file":"static/js/665.72323761.chunk.js","mappings":"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","sources":["components/login/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faEnvelope } from '@fortawesome/free-regular-svg-icons';\nimport { faUnlockAlt, faEnvelope, faKey, faArrowRight, faCaretRight } from '@fortawesome/free-solid-svg-icons';\n\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport './LoginStyle.css'\n\nimport { useForm, useWatch } from 'react-hook-form'\n\n\nimport axios from 'axios';\n\nimport { MyContextSearch, useMyContextSearch } from '../../hooks/useContext/InputSearch';\n\n// 登入在這就去進行個人訂單的更新\nimport { parse, isSameDay, subDays, isBefore } from 'date-fns';\n\n\n\nconst Login = (props) => {\n\n    // 全域引入的 登入 點擊後會存放全域 輸入的值\n    const { loginStatus, setLoginStatus } = useMyContextSearch(MyContextSearch);\n\n\n\n    // const { onLogin, loginAlert, role, msgReg, setMsgReg } = props;\n    const [memberEmail, setMemberEmail] = useState(\"\");\n    const [memberPassword, setMemberPassword] = useState(\"\");\n\n\n\n\n    // 一定要這段\n    const navigate = useNavigate();\n\n\n    // 使用的哪些方法\n    const {\n        watch,\n        register,\n        handleSubmit,\n        formState: { errors }\n    } = useForm()\n\n\n    useEffect(() => {\n        if (loginStatus === true) {\n            navigate('/')\n            return\n        }\n\n\n\n\n    }, []);\n\n\n    // post/login\n    // post/signin\n    // 登入只要帶兩個欄位\n\n\n\n    const onSubmit = async (data) => {\n        // 有抓取物件再轉換 頁面\n        console.log(data);\n        let formdata = JSON.stringify(data)\n        console.log(formdata);\n\n        try {\n            const response = await axios.post(`http://localhost:3000/login`, {\n                \"email\": `${data.login_email}`,\n                \"password\": `${data.login_password}`\n            });\n            console.log(response.data)\n            console.log(response.data.user)\n            console.log(response.data.accessToken)\n\n            localStorage.setItem('token', response.data.accessToken);\n            localStorage.setItem('name', response.data.user.name);\n            localStorage.setItem('nickname', response.data.user.nickname);\n            localStorage.setItem('id', response.data.user.id);\n\n            // 我的登入使用者id 我要patch他的訂單 是否過期 做更新\n            const userPatchOrder = response.data.user.id\n\n            if (localStorage.getItem('prevpage')) {\n                setLoginStatus(true)\n                let id = localStorage.getItem('prevpage');\n                alert('登入成功,將導向至先前頁面')\n\n\n                // ----------------------------------\n                // 定義取得資料的函式 等待取得資料後再繼續往下執行\n                const userOrder = await getUserOrder(userPatchOrder);\n                console.log(userOrder)\n                // ----------------------------------\n\n                // 進行get後的patch\n                await processOrders(userOrder);\n\n                navigate(`/page/${id}`)\n                localStorage.removeItem('prevpage');\n            }\n            else {\n                setLoginStatus(true)\n                // alert('登入成功,將導向至會員頁面')\n\n\n                // ----------------------------------\n                // 定義取得資料的函式 等待取得資料後再繼續往下執行\n                const userOrder = await getUserOrder(userPatchOrder);\n                console.log(userOrder)\n                // ----------------------------------\n\n                // 進行get後的patch\n                await processOrders(userOrder);\n\n                navigate(\"/member\")\n            }\n\n        } catch (error) {\n            console.log(error.response)\n            console.log(error.response.data)\n            alert(`帳號密碼有誤,無法正確登入`)\n        }\n    };\n\n    const getUserOrder = async (userPatchOrder) => {\n        const response = await axios.get(`http://localhost:3000/orders?userId=${userPatchOrder}&orderExpired=false`);\n        return response.data;\n    }\n\n    const processOrders = async (userOrder) => {\n\n        const today = new Date();\n        // 遍歷每筆訂單資料，檢查是否逾期\n        // 這樣就能避免使用 await 在 forEach 迴圈中而產生的錯誤\n        for (const item of userOrder) {\n            console.log(item);\n            // 這是這個特定用戶的最後一天解析成js格式 用它來和今天的日期比較\n            const orderEndDate = parse(item.roomEnd, \"yyyy年MM月dd日\", new Date());\n            console.log(orderEndDate);\n            if (isSameDay(orderEndDate, today)) {\n                console.log('同天日期');\n            } else if (isBefore(orderEndDate, today)) {\n                try {\n                    await axios.patch(`http://localhost:3000/orders/${item.id}`, { orderExpired: true });\n                    console.log(\"patch成功\");\n                } catch (error) {\n                    console.log(\"patch失敗，進行第二次patch\");\n                    try {\n                        await axios.patch(`http://localhost:3000/orders/${item.id}`, { orderExpired: true });\n                        console.log(\"第二次patch成功\");\n                    } catch (error) {\n                        console.log(\"第二次patch失敗\");\n                    }\n                }\n                console.log('過去日期');\n            } else {\n                console.log('未來日期');\n            }\n        }\n    }\n\n\n\n    // const hint = () => {\n    //     if (loginAlert === '') {\n    //         return\n    //     } else if (loginAlert === '登入成功') {\n    //         return\n    //     } else {\n    //         return (\n    //             <div className=\"alert alert-warning\" role=\"alert\">\n    //                 {loginAlert}\n    //             </div>\n    //         )\n    //     }\n    // }\n\n\n\n\n\n    return (\n        <>\n            {/* <!-- login_page --> */}\n            <div className=\"h-screen container relative\">\n\n                <div className='h-full flex justify-center items-center'>\n\n\n                    <div className=\"bg-soft_color w-7/12 p-0 rounded shadow-lg py-5  \" >\n                        {/* style={{ backgroundColor: \"#dfe2dd\" }} */}\n\n\n\n\n                        {/* <div> 預備放個露營縮圖 </div> */}\n\n\n                        <div className=\"py-5\">\n                            <h2 className=\"font-bold text-xl text-my_green\" style={{ letterSpacing: 1 }}>會員登入</h2>\n                        </div>\n\n\n\n                        <hr className=\"bg-my_green h-[1px] w-8/12 mx-auto\" style={{ border: 'none' }} />\n\n\n                        {/* 帳號密碼區塊 */}\n                        <div className=\"py-5\">\n\n\n                            <form onSubmit={handleSubmit(onSubmit)}>\n\n                                <div className=\"flex justify-center py-2\">\n\n                                    <div className='flex items-center px-5 bg-sub_color'>\n                                        <FontAwesomeIcon icon={faEnvelope} className=\" text-white\" />\n                                    </div>\n\n                                    <div>\n                                        <input className=\"border-transparent\" type=\"text\" placeholder=\"請輸入信箱\" {...register('login_email', {\n                                            required: { value: true, message: '此欄位必填寫' },\n                                            pattern: {\n                                                value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g,\n                                                message: 'Email 不合規則'\n                                            }\n                                        })} style={{ letterSpacing: 1 }} onChange={(e) => {\n                                            setMemberEmail(e.target.value);\n                                            }} onFocus={(e) => setMemberEmail(\"kokomi@gmail.com\")} value={memberEmail} />\n                                        {/* onFocus={(e) => setMemberEmail(\"rurumi@gmail.com\")} */}\n                                        {/* required */}\n                                    </div>\n                                </div>\n\n                                <div className=\"min-h-[20px] font-semibold text-sm text-red-500\">\n                                    {errors.login_email?.message}\n                                </div>\n\n\n\n\n                                {/* 帳號通過 資料庫比對 還要比對密碼 兩者都通過才能使用進入 */}\n\n                                <div className=\"flex justify-center py-2\">\n\n                                    <div className='flex items-center px-5 bg-sub_color'>\n                                        <FontAwesomeIcon icon={faKey} className=\" text-white\" />\n                                    </div>\n\n                                    <div>\n                                        <input id=\"input_password\" className=\"border-transparent\" type=\"password\" placeholder=\"請輸入密碼\" {...register('login_password', {\n                                            required: { value: true, message: '此欄位必填寫' },\n                                            pattern: {\n                                                value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[^]{8,16}$/g,\n                                                message: '密碼 8-16字，至少1大寫字母，1小寫字母，1數字'\n                                            }\n                                        })} style={{ letterSpacing: 1 }} onChange={(e) => {\n                                            setMemberPassword(e.target.value)\n                                            }} onFocus={(e) => setMemberPassword(\"Kokomi123456\")} value={memberPassword} />\n                                        {/* onFocus={(e) => setMemberPassword(\"Rurumi123456\")} */}\n                                        {/* required */}\n\n                                    </div>\n                                </div>\n\n                                <div className=\"min-h-[20px] font-semibold text-sm text-red-500\">\n                                    {errors.login_password?.message}\n                                    {/* {errors.login_password && <span>此欄位必填</span>} */}\n                                </div>\n\n\n\n                                <div className=\"flex justify-center py-5\">\n\n                                    {/* onLogin(memberEmail, memberPassword) */}\n                                    <button type=\"\" className=\"font-bold text-my_green button_effect  \" onClick={() => { '登入' }}\n                                        style={{ fontSize: 18 }}>登 入</button>\n\n\n\n                                </div>\n\n\n\n\n                                <hr className=\"bg-my_green h-[1px] w-8/12 mx-auto\" style={{ border: 'none' }} />\n\n\n\n\n\n                                <div className=\"flex justify-center py-5\">\n\n                                    <strong className=\"\">還不是\n\n                                        <span className='text-sub_color mx-1'>Hola Camp會員</span>嗎？\n\n                                    </strong>\n\n\n\n                                    <div className=\"px-3\">\n\n                                        <Link to=\"/register\" className=\"text-sub_color hover:text-my_green font-bold\" >\n                                            現在去註冊\n                                            <FontAwesomeIcon icon={faCaretRight} className=\" text-black\" />\n                                        </Link>\n                                    </div>\n\n\n\n                                </div>\n\n\n                            </form>\n\n\n                        </div>\n\n                    </div>\n\n                </div>\n\n\n            </div>\n            {/* <!-- 登入頁面到此 --> */}\n        </ >\n    );\n\n\n\n\n}\n\nexport default Login;\n// 匯出這個函式功能"],"names":["props","_errors$login_email","_errors$login_passwor","_useMyContextSearch","useMyContextSearch","MyContextSearch","loginStatus","setLoginStatus","_useState","useState","_useState2","_slicedToArray","memberEmail","setMemberEmail","_useState3","_useState4","memberPassword","setMemberPassword","navigate","useNavigate","_useForm","useForm","register","watch","handleSubmit","errors","formState","useEffect","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","formdata","response","userPatchOrder","id","userOrder","_userOrder","wrap","_context","prev","next","console","log","JSON","stringify","axios","concat","login_email","login_password","sent","user","accessToken","localStorage","setItem","name","nickname","getItem","alert","getUserOrder","processOrders","removeItem","t0","stop","_x","apply","arguments","_ref2","_callee2","_context2","abrupt","_x2","_ref3","_callee3","today","_iterator","_step","item","orderEndDate","_context3","Date","_createForOfIteratorHelper","s","n","done","value","parse","roomEnd","isSameDay","isBefore","orderExpired","t1","t2","e","f","finish","_x3","_jsx","_Fragment","children","className","_jsxs","style","letterSpacing","border","FontAwesomeIcon","icon","faEnvelope","_objectSpread","type","placeholder","required","message","pattern","onChange","target","onFocus","faKey","onClick","fontSize","Link","to","faCaretRight"],"sourceRoot":""}